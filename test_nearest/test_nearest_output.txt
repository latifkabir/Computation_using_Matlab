>> test_nearest
23-Dec-2012 12:17:54

TEST_NEAREST:
  MATLAB version
  Consider various nearest neighbor algorithms.

  M = 2, NR = 1000000, NS = 10
  #1 time:    1.127, size = 10, i(1) = 367341
  #2 time:    0.765, size = 10, i(1) = 367341
  #3 time:    0.634, size = 10, i(1) = 367341
  #4 time:    0.547, size = 10, i(1) = 367341
  #5 skipped!
  #6 time:    5.347, size = 10, i(1) = 367341
  #7 time:    1.420, size = 10, i(1) = 367341

  M = 2, NR = 100000, NS = 100
  #1 time:    1.116, size = 100, i(1) = 8599
  #2 time:    0.355, size = 100, i(1) = 8599
  #3 time:    0.360, size = 100, i(1) = 8599
  #4 time:    0.352, size = 100, i(1) = 8599
  #5 skipped!
  #6 time:    0.303, size = 100, i(1) = 8599
  #7 time:    1.151, size = 100, i(1) = 8599

  M = 2, NR = 10000, NS = 1000
  #1 time:    1.124, size = 1000, i(1) = 7699
  #2 time:    0.295, size = 1000, i(1) = 7699
  #3 time:    0.237, size = 1000, i(1) = 7699
  #4 time:    0.276, size = 1000, i(1) = 7699
  #5 time:    0.645 (for Delaunay triangulation)
  #5 time:    0.029 (for Delaunay search)
  #5 time:    0.675, size = 1000, i(1) = 7699
  #6 time:    0.035, size = 1000, i(1) = 7699
  #7 time:    0.381, size = 1000, i(1) = 7699

  M = 2, NR = 1000, NS = 10000
  #1 time:    1.126, size = 10000, i(1) = 434
  #2 time:    0.696, size = 10000, i(1) = 434
  #3 time:    0.375, size = 10000, i(1) = 434
  #4 time:    0.783, size = 10000, i(1) = 434
  #5 time:    0.035 (for Delaunay triangulation)
  #5 time:    0.019 (for Delaunay search)
  #5 time:    0.054, size = 10000, i(1) = 434
  #6 time:    0.021, size = 10000, i(1) = 434
  #7 time:    0.056, size = 10000, i(1) = 434

  M = 2, NR = 100, NS = 100000
  #1 time:    1.142, size = 100000, i(1) = 60
  #2 time:    4.637, size = 100000, i(1) = 60
  #3 time:    1.360, size = 100000, i(1) = 60
  #4 time:    5.493, size = 100000, i(1) = 60
  #5 time:    0.004 (for Delaunay triangulation)
  #5 time:    0.075 (for Delaunay search)
  #5 time:    0.079, size = 100000, i(1) = 60
  #6 time:    0.166, size = 100000, i(1) = 60
  #7 time:    0.080, size = 100000, i(1) = 60

  M = 2, NR = 10, NS = 1000000
  #1 time:    1.305, size = 1000000, i(1) = 4
  #2 time:   42.685, size = 1000000, i(1) = 4
  #3 time:   11.058, size = 1000000, i(1) = 4
  #4 time:   51.631, size = 1000000, i(1) = 4
  #5 time:    0.001 (for Delaunay triangulation)
  #5 time:    0.271 (for Delaunay search)
  #5 time:    0.272, size = 1000000, i(1) = 4
  #6 time:    0.569, size = 1000000, i(1) = 4
  #7 time:    0.287, size = 1000000, i(1) = 4

  M = 4, NR = 1000000, NS = 10
  #1 time:    1.665, size = 10, i(1) = 196372
  #2 time:    1.058, size = 10, i(1) = 196372
  #3 time:    1.021, size = 10, i(1) = 196372
  #4 time:    0.903, size = 10, i(1) = 196372
  #5 skipped!
  #6 time:    5.991, size = 10, i(1) = 196372
  #7 time:    2.186, size = 10, i(1) = 196372

  M = 4, NR = 100000, NS = 100
  #1 time:    1.664, size = 100, i(1) = 37064
  #2 time:    0.642, size = 100, i(1) = 37064
  #3 time:    0.831, size = 100, i(1) = 37064
  #4 time:    0.589, size = 100, i(1) = 37064
  #5 skipped!
  #6 time:    0.338, size = 100, i(1) = 37064
  #7 time:    1.792, size = 100, i(1) = 37064

  M = 4, NR = 10000, NS = 1000
  #1 time:    1.660, size = 1000, i(1) = 7412
  #2 time:    0.407, size = 1000, i(1) = 7412
  #3 time:    0.352, size = 1000, i(1) = 7412
  #4 time:    0.350, size = 1000, i(1) = 7412
  #5 skipped!
  #6 time:    0.044, size = 1000, i(1) = 7412
  #7 time:    1.219, size = 1000, i(1) = 7412

  M = 4, NR = 1000, NS = 10000
  #1 time:    1.663, size = 10000, i(1) = 653
  #2 time:    0.842, size = 10000, i(1) = 653
  #3 time:    0.504, size = 10000, i(1) = 653
  #4 time:    0.831, size = 10000, i(1) = 653
  #5 time:    0.663 (for Delaunay triangulation)
  #5 time:    0.174 (for Delaunay search)
  #5 time:    0.836, size = 10000, i(1) = 653
  #6 time:    0.050, size = 10000, i(1) = 653
  #7 time:    0.740, size = 10000, i(1) = 653

  M = 4, NR = 100, NS = 100000
  #1 time:    1.681, size = 100000, i(1) = 52
  #2 time:    4.793, size = 100000, i(1) = 52
  #3 time:    1.510, size = 100000, i(1) = 52
  #4 time:    5.620, size = 100000, i(1) = 52
  #5 time:    0.035 (for Delaunay triangulation)
  #5 time:    0.780 (for Delaunay search)
  #5 time:    0.815, size = 100000, i(1) = 52
  #6 time:    0.283, size = 100000, i(1) = 52
  #7 time:    0.816, size = 100000, i(1) = 52

  M = 4, NR = 10, NS = 1000000
  #1 time:    1.842, size = 1000000, i(1) = 5
  #2 time:   43.018, size = 1000000, i(1) = 5
  #3 time:   11.357, size = 1000000, i(1) = 5
  #4 time:   52.133, size = 1000000, i(1) = 5
  #5 time:    0.001 (for Delaunay triangulation)
  #5 time:    1.122 (for Delaunay search)
  #5 time:    1.123, size = 1000000, i(1) = 5
  #6 time:    0.726, size = 1000000, i(1) = 5
  #7 time:    1.162, size = 1000000, i(1) = 5

  M = 8, NR = 1000000, NS = 10
  #1 time:    2.719, size = 10, i(1) = 80092
  #2 time:    1.699, size = 10, i(1) = 80092
  #3 time:    2.093, size = 10, i(1) = 80092
  #4 time:    1.880, size = 10, i(1) = 80092
  #5 skipped!
  #6 time:    8.394, size = 10, i(1) = 80092
  #7 time:    4.936, size = 10, i(1) = 80092

  M = 8, NR = 100000, NS = 100
  #1 time:    2.717, size = 100, i(1) = 80002
  #2 time:    1.349, size = 100, i(1) = 80002
  #3 time:    1.754, size = 100, i(1) = 80002
  #4 time:    1.345, size = 100, i(1) = 80002
  #5 skipped!
  #6 time:    0.499, size = 100, i(1) = 80002
  #7 time:    4.555, size = 100, i(1) = 80002

  M = 8, NR = 10000, NS = 1000
  #1 time:    2.708, size = 1000, i(1) = 1272
  #2 time:    0.509, size = 1000, i(1) = 1272
  #3 time:    0.496, size = 1000, i(1) = 1272
  #4 time:    0.523, size = 1000, i(1) = 1272
  #5 skipped!
  #6 time:    0.101, size = 1000, i(1) = 1272
  #7 time:    1.620, size = 1000, i(1) = 1272

  M = 8, NR = 1000, NS = 10000
  #1 time:    2.709, size = 10000, i(1) = 357
  #2 time:    1.014, size = 10000, i(1) = 357
  #3 time:    0.733, size = 10000, i(1) = 357
  #4 time:    1.024, size = 10000, i(1) = 357
  #5 skipped!
  #6 time:    0.283, size = 10000, i(1) = 357
  #7 time:    2.761, size = 10000, i(1) = 357

  M = 8, NR = 100, NS = 100000
  #1 time:    2.731, size = 100000, i(1) = 6
  #2 time:    4.990, size = 100000, i(1) = 6
  #3 time:    1.723, size = 100000, i(1) = 6
  #4 time:    5.838, size = 100000, i(1) = 6
  #5 time:    9.596 (for Delaunay triangulation)
  #5 time:  503.069 (for Delaunay search)
  #5 time:  512.665, size = 100000, i(1) = 6
  #6 time:    0.621, size = 100000, i(1) = 6
  #7 time:   10.584, size = 100000, i(1) = 6

  M = 8, NR = 10, NS = 1000000
  #1 time:    2.878, size = 1000000, i(1) = 7
  #2 time:   42.855, size = 1000000, i(1) = 7
  #3 time:   11.521, size = 1000000, i(1) = 7
  #4 time:   51.922, size = 1000000, i(1) = 7
  #5 time:    0.001 (for Delaunay triangulation)
  #5 time:    1.077 (for Delaunay search)
  #5 time:    1.078, size = 1000000, i(1) = 7
  #6 time:    1.035, size = 1000000, i(1) = 7
  #7 time:   71.891, size = 1000000, i(1) = 7

TEST_NEAREST
  Normal end of execution.

23-Dec-2012 12:35:41
>> 
